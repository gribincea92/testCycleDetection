{"version":3,"sources":["i18n/config.ts","utils/DataMapper.ts","utils/GraphUtils.ts","screens/main/mainSlice.ts","screens/main/components/inputSection/InputSection.tsx","screens/main/components/inputSection/index.ts","app/hooks.ts","screens/main/components/outputSection/index.ts","screens/main/components/outputSection/OutputSection.tsx","screens/main/index.ts","screens/main/Main.tsx","config/routes.ts","Router.tsx","App.tsx","reportWebVitals.ts","app/store.ts","index.tsx"],"names":["i18n","use","initReactI18next","init","resources","en","translation","fr","lng","getUserLocale","fallbackLng","debug","interpolation","escapeValue","react","wait","nsMode","input","Object","keys","map","i","id","text","edges","entries","forEach","node","adjList","adjNode","push","from","to","isCyclicUtil","nodeMap","data","recStack","visited","children","c","slice","createSlice","name","initialState","nodes","error","reducers","setData","state","action","payload","setError","actions","selectData","main","selectError","initialNodeMapInput","initialData","InputSection","dispatch","useDispatch","useState","JSON","stringify","inputValue","setInputValue","Container","maxWidth","Typography","variant","gutterBottom","component","i18next","t","TextareaAutosize","className","minRows","maxRows","placeholder","value","onChange","e","target","Button","onClick","parsedInput","parse","length","GraphUtils","DataMapper","useAppSelector","useSelector","OutputSection","outputMessage","renderOutputMessage","Paper","elevation","maxHeight","Main","ROUTES","App","fallback","exact","path","Router","I18nextProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","mainReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe2927f5.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport getUserLocale from 'get-user-locale';\nimport en from './en.json';\nimport fr from './fr.json';\n\ni18n\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: { translation: en },\n      fr: { translation: fr },\n    },\n    lng: getUserLocale(),\n    fallbackLng: 'en',\n    debug: false,\n    interpolation: {\n      escapeValue: false,\n    },\n    react: {\n      wait: false,\n      nsMode: 'default',\n    },\n  });\n\nexport default i18n;\n","import { EdgeData, NodeData } from 'reaflow';\nimport { InputNodeMapType } from 'types/InputNodeMapType';\n\nconst mapToNodeDataList = (input: InputNodeMapType): NodeData[] => {\n  const keys = Object.keys(input);\n  return keys.map((i) => ({\n    id: i,\n    text: i,\n  }));\n};\n\nconst mapToEdgeDataList = (input: InputNodeMapType): EdgeData[] => {\n  const edges: EdgeData[] = [];\n\n  Object.entries(input).forEach(([node, nodeContent]) => {\n    const { adjList } = nodeContent;\n    adjList.forEach((adjNode) => {\n      edges.push({\n        id: `${node}-${adjNode}`,\n        from: node,\n        to: adjNode,\n      });\n    });\n  });\n\n  return edges;\n};\n\nexport default {\n  mapToNodeDataList,\n  mapToEdgeDataList,\n};\n","import { InputNodeMapType } from 'types/InputNodeMapType';\nimport { InputNodeDataType } from 'types/InputNodeDataType';\n\nconst isCyclicUtil = (nodeMap: InputNodeMapType, node: string, data: InputNodeDataType) => {\n  // Mark the current node as visited and part of recursion stack\n  if (data.recStack) {\n    return true;\n  }\n  if (data.visited) {\n    return false;\n  }\n\n  data.visited = true;\n  data.recStack = true;\n\n  const children = data.adjList;\n  for (const c of children) {\n    if (isCyclicUtil(nodeMap, c, nodeMap[c])) {\n      return true;\n    }\n  }\n\n  data.recStack = false;\n\n  return false;\n};\n\nconst isCyclic = (nodeMap: InputNodeMapType): boolean => {\n  // Mark all the vertices as not visited and\n  // not part of recursion stack\n  for (const node in nodeMap) {\n    nodeMap[node].visited = false;\n    nodeMap[node].recStack = false;\n  }\n\n  for (const [node, data] of Object.entries(nodeMap)) {\n    if (isCyclicUtil(nodeMap, node, data)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nexport default {\n  isCyclic,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { EdgeData, NodeData } from 'reaflow';\nimport { InputNodeMapType } from 'types/InputNodeMapType';\nimport DataMapper from 'utils/DataMapper';\nimport GraphUtils from 'utils/GraphUtils';\nimport i18next from 'i18next';\nimport { AppDispatch, RootState } from '../../app/store';\n\ninterface DataState {\n  nodes: NodeData[];\n  edges: EdgeData[];\n}\n\ntype ErrorState = string | null;\n\ninterface MainState {\n  data: DataState;\n  error: ErrorState;\n}\n\nconst initialState: MainState = {\n  data: {\n    nodes: [],\n    edges: [],\n  },\n  error: null,\n};\n\nexport const slice = createSlice({\n  name: 'main',\n  initialState,\n  reducers: {\n    setData: (state, action: PayloadAction<DataState>) => {\n      state.data = action.payload;\n    },\n    setError: (state, action: PayloadAction<ErrorState>) => {\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const { setData, setError } = slice.actions;\n\nexport const doSubmit = (input: string) => (dispatch: AppDispatch) => {\n  let nodes: NodeData[] = [];\n  let edges: EdgeData[] = [];\n\n  dispatch(setError(null));\n  dispatch(\n    setData({\n      nodes,\n      edges,\n    }),\n  );\n\n  if (!input) {\n    dispatch(setError(i18next.t('main.errors.invalidInput')));\n    return;\n  }\n\n  let parsedInput = {};\n  try {\n    parsedInput = JSON.parse(input) as InputNodeMapType;\n  } catch (e) {\n    dispatch(setError(i18next.t('main.errors.notParseableInput')));\n    return;\n  }\n\n  if (!Object.keys(parsedInput).length) {\n    dispatch(setError(i18next.t('main.errors.emptyInput')));\n    return;\n  }\n\n  // Detect cycles\n  if (GraphUtils.isCyclic(parsedInput)) {\n    dispatch(setError(i18next.t('main.errors.hasCycle')));\n  }\n\n  nodes = DataMapper.mapToNodeDataList(parsedInput);\n  edges = DataMapper.mapToEdgeDataList(parsedInput);\n\n  dispatch(\n    setData({\n      nodes,\n      edges,\n    }),\n  );\n};\n\nexport const selectData = (state: RootState): DataState => state.main.data;\nexport const selectError = (state: RootState): ErrorState => state.main.error;\n\nexport default slice.reducer;\n","import React, { FC, useState } from 'react';\nimport { Button, Container, TextareaAutosize, Typography } from '@mui/material';\nimport i18next from 'i18next';\nimport { InputNodeMapType } from 'types/InputNodeMapType';\nimport { useDispatch } from 'react-redux';\nimport initialData from 'utils/data.json';\nimport { doSubmit } from '../../mainSlice';\n\nimport './styles.css';\n\nconst initialNodeMapInput = initialData as InputNodeMapType;\n\nconst InputSection: FC = () => {\n  const dispatch = useDispatch();\n  const [inputValue, setInputValue] = useState<string>(\n    JSON.stringify(initialNodeMapInput, null, 2),\n  );\n\n  const attemptToSubmit = () => {\n    dispatch(doSubmit(inputValue));\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Typography variant=\"h6\" gutterBottom component=\"div\">\n        {i18next.t('main.formTitle')}\n      </Typography>\n      <TextareaAutosize\n        className=\"text-area\"\n        minRows={10}\n        maxRows={10}\n        placeholder={i18next.t('main.textAreaPlaceholder')}\n        value={inputValue}\n        onChange={(e) => setInputValue(e.target.value)}\n      />\n      <Button variant=\"contained\" onClick={attemptToSubmit}>\n        {i18next.t('main.submitButton')}\n      </Button>\n    </Container>\n  );\n};\n\nexport default InputSection;\n","import InputSection from './InputSection';\n\nexport default InputSection;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\nexport const useAppDispatch = (): AppDispatch => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import OutputSection from './OutputSection';\n\nexport default OutputSection;\n","import React, { FC } from 'react';\nimport { Container, Paper, Typography } from '@mui/material';\nimport i18next from 'i18next';\nimport { Canvas } from 'reaflow';\nimport { useAppSelector } from 'app/hooks';\nimport { selectData, selectError } from '../../mainSlice';\n\nimport './styles.css';\n\nconst OutputSection: FC = () => {\n  const data = useAppSelector(selectData);\n  const error = useAppSelector(selectError);\n\n  const renderOutputMessage = () => {\n    let outputMessage = '';\n\n    if (error) {\n      outputMessage = error;\n    } else if (data.nodes.length || data.edges.length) {\n      outputMessage = i18next.t('main.success');\n    }\n\n    if (!outputMessage) {\n      return null;\n    }\n\n    return (\n      <div className=\"output-message-block\">\n        <Typography variant=\"h6\" gutterBottom component=\"div\">\n          {outputMessage}\n        </Typography>\n      </div>\n    );\n  };\n\n  const renderData = () => {\n    if (!data.nodes.length || !data.edges.length) {\n      return null;\n    }\n\n    return (\n      <Paper elevation={0}>\n        <Canvas nodes={data.nodes} edges={data.edges} maxHeight={768} maxWidth={1024} />\n      </Paper>\n    );\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      {renderOutputMessage()}\n      {renderData()}\n    </Container>\n  );\n};\n\nexport default OutputSection;\n","import Main from \"./Main\";\n\nexport default Main;\n","import React, { FC } from 'react';\nimport InputSection from './components/inputSection';\nimport OutputSection from './components/outputSection';\n\nimport './styles.css';\n\nconst Main: FC = () => (\n  <div className=\"layout\">\n    <InputSection />\n    <OutputSection />\n  </div>\n);\n\nexport default Main;\n","const ROUTES = {\n  main: '/main',\n};\n\nexport default ROUTES;\n","import React, { FC, Suspense } from 'react';\nimport { BrowserRouter, Redirect, Switch, Route } from 'react-router-dom';\n\nimport Main from 'screens/main';\n\nimport { ROUTES } from './config';\n\nconst App = () => (\n  <Suspense fallback={null}>\n    <Switch>\n      <Redirect exact from=\"/\" to={ROUTES.main} />\n      <Route path={ROUTES.main} component={Main} />\n    </Switch>\n  </Suspense>\n);\n\nconst Router: FC = () => (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React, { FC } from 'react';\nimport { I18nextProvider } from 'react-i18next';\nimport i18n from './i18n/config';\nimport Router from './Router';\n\nconst App: FC = () => (\n  <I18nextProvider i18n={i18n}>\n    <Router />\n  </I18nextProvider>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport mainReducer from '../screens/main/mainSlice';\n\nexport const store = configureStore({\n  reducer: {\n    main: mainReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './app/store';\n\nimport './index.css';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}